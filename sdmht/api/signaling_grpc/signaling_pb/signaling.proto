syntax = "proto3";

package signaling_pb;
option go_package = "sdmht/sdmht/api/signaling_grpc/signaling";

// import "google/protobuf/timestamp.proto";
import "lib/protobuf/error.proto";

service Signaling {
    rpc Login(LoginReq) returns (LoginReply);
    rpc NewLineup(NewLineupReq) returns (CommonReply);
    rpc FindLineup(FindLineupReq) returns (FindLineupReply);
    rpc UpdateLineup(UpdateLineupReq) returns (CommonReply);
    rpc DeleteLineup(DeleteLineupReq) returns (CommonReply);
    rpc NewMatch(NewMatchReq) returns (NewMatchReply);
    rpc GetMatch(GetMatchReq) returns (GetMatchReply);
    rpc JoinMatch(JoinMatchReq) returns (JoinMatchReply);
    rpc SyncOperator(SyncOperatorReq) returns (CommonReply);
    rpc KeepAlive(KeepAliveReq) returns (CommonReply);
    rpc Offline(LogoutReq) returns (CommonReply);
}

message CommonReply {
    lib.Error err = 1;
}

message Lineup {
    uint64 id = 1;
    uint64 account_id = 2;
    string name = 3;
    bool enabled = 4;
    repeated int64 units = 5;
    repeated int64 card_librarys = 6;
}

message Scene {
    repeated int32 squares = 1;
    repeated int64 hand_cards = 2;
    repeated int64 card_libraries = 3;
    bool is_library_expty = 4;
    int32 library_expty_hurt = 5;
    int32 draw_card_countdown = 6;
    repeated int64 units_location = 7;
}

message BaseAttribute {
    int64  id = 1;
    string  name = 2;
    repeated Skill skills = 3;
    int32  rarity = 4;
    int32  affiliate = 5;
    uint32  attack = 6;
    uint32  max_defend = 7;
    uint32  max_health = 8;
    uint32  max_move = 9;
    bool  base_no_move = 10;
    bool  base_no_attack = 11;
    bool  base_no_cure = 12;
    bool  base_no_equip = 13;
    int32 skill_use_cnt = 14;
}

message Skill {
	string name     = 1;
	string use_cnt  = 2;
	string desc     = 3;
}

message TempAttribute {
    int32   value = 1;
    uint32  period = 2;
}

message Unit {
    BaseAttribute baseAttribute = 1;
    // int32 location = 2;
    uint32 health = 3;
    uint32 defend = 4;
    int32 move = 5;
    bool attack_prevent = 6;
    // bool counter_attack = 7;
    // bool rebirth = 8;
    int32 hurt_instead = 9;
    uint32 no_move = 10;
    uint32 no_attack = 11;
    uint32 no_cure = 12;
    repeated TempAttribute change_attack = 13;
    repeated TempAttribute change_move = 14;
    repeated TempAttribute hurt = 15;
    repeated TempAttribute cure = 16;
}

message Player {
    uint64 id = 1;
    Scene scene = 2;
    repeated Unit units= 3;
    int32 cost = 4;
}

message match {
    uint64 id = 1;
    uint64 winner = 2;
    int32 whose_turn = 3;
    uint64 cur_round = 4;
    repeated Player players = 5;
    int64 sn = 6;
}

message LoginReq {
    string wechat_id = 1;
    string user_name = 2;
}
message LoginReply {
    lib.Error err = 1;
    uint64 account_id = 2;
}

message NewLineupReq {
    Lineup lineup = 1;
}

message FindLineupReq {
    uint64 account_id = 1;
}
message FindLineupReply {
    lib.Error err = 1;
    int32 total = 2;
    repeated Lineup lineups = 3;
}

message UpdateLineupReq {
    Lineup lineup = 1;
}

message DeleteLineupReq {
    uint64 id = 1;
    uint64 account_id = 2;
}

message NewMatchReq {
    uint64 account_id = 1;
    repeated int64 positions = 2;
    uint64 lineup_id = 3;
}
message NewMatchReply {
    lib.Error err = 1;
    uint64 match_id = 2;
}

message GetMatchReq {
    uint64 account_id = 1;
}
message GetMatchReply {
    lib.Error err = 1;
    match match = 2;
}

message JoinMatchReq {
    uint64 account_id = 1;
    repeated int64 positions = 2;
    uint64 lineup_id = 3;
    uint64 match_id = 4;
}
message JoinMatchReply {
    lib.Error err = 1;
    match match = 2;
}

message SyncOperatorReq{}

message KeepAliveReq {
    uint64 operator = 1;
}

message LogoutReq {
    uint64 operator = 1;
    string reason = 2;
}
