// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.22.3
// source: signaling.proto

package signaling

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	error1 "sdmht/lib/protobuf/types/error"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err *error1.Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *CommonReply) Reset() {
	*x = CommonReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonReply) ProtoMessage() {}

func (x *CommonReply) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonReply.ProtoReflect.Descriptor instead.
func (*CommonReply) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{0}
}

func (x *CommonReply) GetErr() *error1.Error {
	if x != nil {
		return x.Err
	}
	return nil
}

type Lineup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId    uint64  `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Name         string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Enabled      bool    `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Units        []int64 `protobuf:"varint,5,rep,packed,name=units,proto3" json:"units,omitempty"`
	CardLibrarys []int64 `protobuf:"varint,6,rep,packed,name=card_librarys,json=cardLibrarys,proto3" json:"card_librarys,omitempty"`
}

func (x *Lineup) Reset() {
	*x = Lineup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lineup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lineup) ProtoMessage() {}

func (x *Lineup) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lineup.ProtoReflect.Descriptor instead.
func (*Lineup) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{1}
}

func (x *Lineup) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Lineup) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *Lineup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lineup) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Lineup) GetUnits() []int64 {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *Lineup) GetCardLibrarys() []int64 {
	if x != nil {
		return x.CardLibrarys
	}
	return nil
}

type Scene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId          uint64  `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Units             []*Unit `protobuf:"bytes,2,rep,name=units,proto3" json:"units,omitempty"`
	Squares           []int32 `protobuf:"varint,3,rep,packed,name=squares,proto3" json:"squares,omitempty"`
	UnitsLocation     []int64 `protobuf:"varint,4,rep,packed,name=units_location,json=unitsLocation,proto3" json:"units_location,omitempty"`
	HandCards         []int64 `protobuf:"varint,5,rep,packed,name=hand_cards,json=handCards,proto3" json:"hand_cards,omitempty"`
	CardLibraries     []int64 `protobuf:"varint,6,rep,packed,name=card_libraries,json=cardLibraries,proto3" json:"card_libraries,omitempty"`
	IsLibraryExpty    bool    `protobuf:"varint,7,opt,name=is_library_expty,json=isLibraryExpty,proto3" json:"is_library_expty,omitempty"`
	RetainerAliveNum  int32   `protobuf:"varint,8,opt,name=retainer_alive_num,json=retainerAliveNum,proto3" json:"retainer_alive_num,omitempty"`
	LibraryExptyHurt  int32   `protobuf:"varint,9,opt,name=library_expty_hurt,json=libraryExptyHurt,proto3" json:"library_expty_hurt,omitempty"`
	DrawCardCountdown int32   `protobuf:"varint,10,opt,name=draw_card_countdown,json=drawCardCountdown,proto3" json:"draw_card_countdown,omitempty"`
	Cost              int32   `protobuf:"varint,11,opt,name=cost,proto3" json:"cost,omitempty"`
	LastMoveUnitId    int64   `protobuf:"varint,12,opt,name=last_move_unit_id,json=lastMoveUnitId,proto3" json:"last_move_unit_id,omitempty"`
	MasterId          int64   `protobuf:"varint,13,opt,name=master_id,json=masterId,proto3" json:"master_id,omitempty"`
}

func (x *Scene) Reset() {
	*x = Scene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scene) ProtoMessage() {}

func (x *Scene) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scene.ProtoReflect.Descriptor instead.
func (*Scene) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{2}
}

func (x *Scene) GetPlayerId() uint64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *Scene) GetUnits() []*Unit {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *Scene) GetSquares() []int32 {
	if x != nil {
		return x.Squares
	}
	return nil
}

func (x *Scene) GetUnitsLocation() []int64 {
	if x != nil {
		return x.UnitsLocation
	}
	return nil
}

func (x *Scene) GetHandCards() []int64 {
	if x != nil {
		return x.HandCards
	}
	return nil
}

func (x *Scene) GetCardLibraries() []int64 {
	if x != nil {
		return x.CardLibraries
	}
	return nil
}

func (x *Scene) GetIsLibraryExpty() bool {
	if x != nil {
		return x.IsLibraryExpty
	}
	return false
}

func (x *Scene) GetRetainerAliveNum() int32 {
	if x != nil {
		return x.RetainerAliveNum
	}
	return 0
}

func (x *Scene) GetLibraryExptyHurt() int32 {
	if x != nil {
		return x.LibraryExptyHurt
	}
	return 0
}

func (x *Scene) GetDrawCardCountdown() int32 {
	if x != nil {
		return x.DrawCardCountdown
	}
	return 0
}

func (x *Scene) GetCost() int32 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Scene) GetLastMoveUnitId() int64 {
	if x != nil {
		return x.LastMoveUnitId
	}
	return 0
}

func (x *Scene) GetMasterId() int64 {
	if x != nil {
		return x.MasterId
	}
	return 0
}

type BaseAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Skills       []*Skill `protobuf:"bytes,3,rep,name=skills,proto3" json:"skills,omitempty"`
	Rarity       int32    `protobuf:"varint,4,opt,name=rarity,proto3" json:"rarity,omitempty"`
	Affiliate    int32    `protobuf:"varint,5,opt,name=affiliate,proto3" json:"affiliate,omitempty"`
	BaseAttack   int32    `protobuf:"varint,6,opt,name=base_attack,json=baseAttack,proto3" json:"base_attack,omitempty"`
	MaxDefend    int32    `protobuf:"varint,7,opt,name=max_defend,json=maxDefend,proto3" json:"max_defend,omitempty"`
	MaxHealth    int32    `protobuf:"varint,8,opt,name=max_health,json=maxHealth,proto3" json:"max_health,omitempty"`
	MaxMove      int32    `protobuf:"varint,9,opt,name=max_move,json=maxMove,proto3" json:"max_move,omitempty"`
	BaseNoMove   bool     `protobuf:"varint,10,opt,name=base_no_move,json=baseNoMove,proto3" json:"base_no_move,omitempty"`
	BaseNoAttack bool     `protobuf:"varint,11,opt,name=base_no_attack,json=baseNoAttack,proto3" json:"base_no_attack,omitempty"`
	BaseNoCure   bool     `protobuf:"varint,12,opt,name=base_no_cure,json=baseNoCure,proto3" json:"base_no_cure,omitempty"`
	BaseNoEquip  bool     `protobuf:"varint,13,opt,name=base_no_equip,json=baseNoEquip,proto3" json:"base_no_equip,omitempty"`
	SkillUseCnt  int32    `protobuf:"varint,14,opt,name=skill_use_cnt,json=skillUseCnt,proto3" json:"skill_use_cnt,omitempty"`
}

func (x *BaseAttribute) Reset() {
	*x = BaseAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseAttribute) ProtoMessage() {}

func (x *BaseAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseAttribute.ProtoReflect.Descriptor instead.
func (*BaseAttribute) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{3}
}

func (x *BaseAttribute) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BaseAttribute) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseAttribute) GetSkills() []*Skill {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *BaseAttribute) GetRarity() int32 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *BaseAttribute) GetAffiliate() int32 {
	if x != nil {
		return x.Affiliate
	}
	return 0
}

func (x *BaseAttribute) GetBaseAttack() int32 {
	if x != nil {
		return x.BaseAttack
	}
	return 0
}

func (x *BaseAttribute) GetMaxDefend() int32 {
	if x != nil {
		return x.MaxDefend
	}
	return 0
}

func (x *BaseAttribute) GetMaxHealth() int32 {
	if x != nil {
		return x.MaxHealth
	}
	return 0
}

func (x *BaseAttribute) GetMaxMove() int32 {
	if x != nil {
		return x.MaxMove
	}
	return 0
}

func (x *BaseAttribute) GetBaseNoMove() bool {
	if x != nil {
		return x.BaseNoMove
	}
	return false
}

func (x *BaseAttribute) GetBaseNoAttack() bool {
	if x != nil {
		return x.BaseNoAttack
	}
	return false
}

func (x *BaseAttribute) GetBaseNoCure() bool {
	if x != nil {
		return x.BaseNoCure
	}
	return false
}

func (x *BaseAttribute) GetBaseNoEquip() bool {
	if x != nil {
		return x.BaseNoEquip
	}
	return false
}

func (x *BaseAttribute) GetSkillUseCnt() int32 {
	if x != nil {
		return x.SkillUseCnt
	}
	return 0
}

type Skill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	UseCnt string `protobuf:"bytes,2,opt,name=use_cnt,json=useCnt,proto3" json:"use_cnt,omitempty"`
	Desc   string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *Skill) Reset() {
	*x = Skill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Skill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Skill) ProtoMessage() {}

func (x *Skill) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Skill.ProtoReflect.Descriptor instead.
func (*Skill) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{4}
}

func (x *Skill) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Skill) GetUseCnt() string {
	if x != nil {
		return x.UseCnt
	}
	return ""
}

func (x *Skill) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type TempAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value  int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Period int32 `protobuf:"varint,2,opt,name=period,proto3" json:"period,omitempty"`
}

func (x *TempAttribute) Reset() {
	*x = TempAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TempAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TempAttribute) ProtoMessage() {}

func (x *TempAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TempAttribute.ProtoReflect.Descriptor instead.
func (*TempAttribute) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{5}
}

func (x *TempAttribute) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *TempAttribute) GetPeriod() int32 {
	if x != nil {
		return x.Period
	}
	return 0
}

type Unit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseAttribute *BaseAttribute `protobuf:"bytes,1,opt,name=baseAttribute,proto3" json:"baseAttribute,omitempty"`
	// int32 location = 2;
	Health        int32            `protobuf:"varint,3,opt,name=health,proto3" json:"health,omitempty"`
	Defend        int32            `protobuf:"varint,4,opt,name=defend,proto3" json:"defend,omitempty"`
	Attack        int32            `protobuf:"varint,5,opt,name=attack,proto3" json:"attack,omitempty"`
	Move          int32            `protobuf:"varint,6,opt,name=move,proto3" json:"move,omitempty"`
	IsMoving      int32            `protobuf:"varint,7,opt,name=is_moving,json=isMoving,proto3" json:"is_moving,omitempty"`
	AttackPrevent bool             `protobuf:"varint,8,opt,name=attack_prevent,json=attackPrevent,proto3" json:"attack_prevent,omitempty"`
	HurtInstead   int32            `protobuf:"varint,9,opt,name=hurt_instead,json=hurtInstead,proto3" json:"hurt_instead,omitempty"`
	NoMove        int32            `protobuf:"varint,10,opt,name=no_move,json=noMove,proto3" json:"no_move,omitempty"`
	NoAttack      int32            `protobuf:"varint,11,opt,name=no_attack,json=noAttack,proto3" json:"no_attack,omitempty"`
	NoCure        int32            `protobuf:"varint,12,opt,name=no_cure,json=noCure,proto3" json:"no_cure,omitempty"`
	ChangeAttack  []*TempAttribute `protobuf:"bytes,13,rep,name=change_attack,json=changeAttack,proto3" json:"change_attack,omitempty"`
	ChangeMove    []*TempAttribute `protobuf:"bytes,14,rep,name=change_move,json=changeMove,proto3" json:"change_move,omitempty"`
	Hurt          []*TempAttribute `protobuf:"bytes,15,rep,name=hurt,proto3" json:"hurt,omitempty"`
	Cure          []*TempAttribute `protobuf:"bytes,16,rep,name=cure,proto3" json:"cure,omitempty"`
}

func (x *Unit) Reset() {
	*x = Unit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{6}
}

func (x *Unit) GetBaseAttribute() *BaseAttribute {
	if x != nil {
		return x.BaseAttribute
	}
	return nil
}

func (x *Unit) GetHealth() int32 {
	if x != nil {
		return x.Health
	}
	return 0
}

func (x *Unit) GetDefend() int32 {
	if x != nil {
		return x.Defend
	}
	return 0
}

func (x *Unit) GetAttack() int32 {
	if x != nil {
		return x.Attack
	}
	return 0
}

func (x *Unit) GetMove() int32 {
	if x != nil {
		return x.Move
	}
	return 0
}

func (x *Unit) GetIsMoving() int32 {
	if x != nil {
		return x.IsMoving
	}
	return 0
}

func (x *Unit) GetAttackPrevent() bool {
	if x != nil {
		return x.AttackPrevent
	}
	return false
}

func (x *Unit) GetHurtInstead() int32 {
	if x != nil {
		return x.HurtInstead
	}
	return 0
}

func (x *Unit) GetNoMove() int32 {
	if x != nil {
		return x.NoMove
	}
	return 0
}

func (x *Unit) GetNoAttack() int32 {
	if x != nil {
		return x.NoAttack
	}
	return 0
}

func (x *Unit) GetNoCure() int32 {
	if x != nil {
		return x.NoCure
	}
	return 0
}

func (x *Unit) GetChangeAttack() []*TempAttribute {
	if x != nil {
		return x.ChangeAttack
	}
	return nil
}

func (x *Unit) GetChangeMove() []*TempAttribute {
	if x != nil {
		return x.ChangeMove
	}
	return nil
}

func (x *Unit) GetHurt() []*TempAttribute {
	if x != nil {
		return x.Hurt
	}
	return nil
}

func (x *Unit) GetCure() []*TempAttribute {
	if x != nil {
		return x.Cure
	}
	return nil
}

type Match struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Winner    uint64   `protobuf:"varint,2,opt,name=winner,proto3" json:"winner,omitempty"`
	WhoseTurn int32    `protobuf:"varint,3,opt,name=whose_turn,json=whoseTurn,proto3" json:"whose_turn,omitempty"`
	CurRound  uint64   `protobuf:"varint,4,opt,name=cur_round,json=curRound,proto3" json:"cur_round,omitempty"`
	Scenes    []*Scene `protobuf:"bytes,5,rep,name=scenes,proto3" json:"scenes,omitempty"`
	Sn        int64    `protobuf:"varint,6,opt,name=sn,proto3" json:"sn,omitempty"`
}

func (x *Match) Reset() {
	*x = Match{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Match) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Match) ProtoMessage() {}

func (x *Match) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Match.ProtoReflect.Descriptor instead.
func (*Match) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{7}
}

func (x *Match) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Match) GetWinner() uint64 {
	if x != nil {
		return x.Winner
	}
	return 0
}

func (x *Match) GetWhoseTurn() int32 {
	if x != nil {
		return x.WhoseTurn
	}
	return 0
}

func (x *Match) GetCurRound() uint64 {
	if x != nil {
		return x.CurRound
	}
	return 0
}

func (x *Match) GetScenes() []*Scene {
	if x != nil {
		return x.Scenes
	}
	return nil
}

func (x *Match) GetSn() int64 {
	if x != nil {
		return x.Sn
	}
	return 0
}

type LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WechatId string `protobuf:"bytes,1,opt,name=wechat_id,json=wechatId,proto3" json:"wechat_id,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
}

func (x *LoginReq) Reset() {
	*x = LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReq) ProtoMessage() {}

func (x *LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReq.ProtoReflect.Descriptor instead.
func (*LoginReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{8}
}

func (x *LoginReq) GetWechatId() string {
	if x != nil {
		return x.WechatId
	}
	return ""
}

func (x *LoginReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type LoginReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err       *error1.Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	AccountId uint64        `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *LoginReply) Reset() {
	*x = LoginReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginReply) ProtoMessage() {}

func (x *LoginReply) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginReply.ProtoReflect.Descriptor instead.
func (*LoginReply) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{9}
}

func (x *LoginReply) GetErr() *error1.Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *LoginReply) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type NewLineupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lineup *Lineup `protobuf:"bytes,1,opt,name=lineup,proto3" json:"lineup,omitempty"`
}

func (x *NewLineupReq) Reset() {
	*x = NewLineupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewLineupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewLineupReq) ProtoMessage() {}

func (x *NewLineupReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewLineupReq.ProtoReflect.Descriptor instead.
func (*NewLineupReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{10}
}

func (x *NewLineupReq) GetLineup() *Lineup {
	if x != nil {
		return x.Lineup
	}
	return nil
}

type FindLineupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *FindLineupReq) Reset() {
	*x = FindLineupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindLineupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindLineupReq) ProtoMessage() {}

func (x *FindLineupReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindLineupReq.ProtoReflect.Descriptor instead.
func (*FindLineupReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{11}
}

func (x *FindLineupReq) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type FindLineupReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err     *error1.Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Total   int32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Lineups []*Lineup     `protobuf:"bytes,3,rep,name=lineups,proto3" json:"lineups,omitempty"`
}

func (x *FindLineupReply) Reset() {
	*x = FindLineupReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindLineupReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindLineupReply) ProtoMessage() {}

func (x *FindLineupReply) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindLineupReply.ProtoReflect.Descriptor instead.
func (*FindLineupReply) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{12}
}

func (x *FindLineupReply) GetErr() *error1.Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *FindLineupReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *FindLineupReply) GetLineups() []*Lineup {
	if x != nil {
		return x.Lineups
	}
	return nil
}

type UpdateLineupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lineup *Lineup `protobuf:"bytes,1,opt,name=lineup,proto3" json:"lineup,omitempty"`
}

func (x *UpdateLineupReq) Reset() {
	*x = UpdateLineupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLineupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLineupReq) ProtoMessage() {}

func (x *UpdateLineupReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLineupReq.ProtoReflect.Descriptor instead.
func (*UpdateLineupReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateLineupReq) GetLineup() *Lineup {
	if x != nil {
		return x.Lineup
	}
	return nil
}

type DeleteLineupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AccountId uint64 `protobuf:"varint,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *DeleteLineupReq) Reset() {
	*x = DeleteLineupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteLineupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteLineupReq) ProtoMessage() {}

func (x *DeleteLineupReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteLineupReq.ProtoReflect.Descriptor instead.
func (*DeleteLineupReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteLineupReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteLineupReq) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type NewMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Positions []int64 `protobuf:"varint,2,rep,packed,name=positions,proto3" json:"positions,omitempty"`
	LineupId  uint64  `protobuf:"varint,3,opt,name=lineup_id,json=lineupId,proto3" json:"lineup_id,omitempty"`
}

func (x *NewMatchReq) Reset() {
	*x = NewMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMatchReq) ProtoMessage() {}

func (x *NewMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMatchReq.ProtoReflect.Descriptor instead.
func (*NewMatchReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{15}
}

func (x *NewMatchReq) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *NewMatchReq) GetPositions() []int64 {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *NewMatchReq) GetLineupId() uint64 {
	if x != nil {
		return x.LineupId
	}
	return 0
}

type NewMatchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err     *error1.Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	MatchId uint64        `protobuf:"varint,2,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
}

func (x *NewMatchReply) Reset() {
	*x = NewMatchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewMatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewMatchReply) ProtoMessage() {}

func (x *NewMatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewMatchReply.ProtoReflect.Descriptor instead.
func (*NewMatchReply) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{16}
}

func (x *NewMatchReply) GetErr() *error1.Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *NewMatchReply) GetMatchId() uint64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

type GetMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64 `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *GetMatchReq) Reset() {
	*x = GetMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchReq) ProtoMessage() {}

func (x *GetMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchReq.ProtoReflect.Descriptor instead.
func (*GetMatchReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{17}
}

func (x *GetMatchReq) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

type GetMatchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err   *error1.Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Match *Match        `protobuf:"bytes,2,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *GetMatchReply) Reset() {
	*x = GetMatchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchReply) ProtoMessage() {}

func (x *GetMatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchReply.ProtoReflect.Descriptor instead.
func (*GetMatchReply) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{18}
}

func (x *GetMatchReply) GetErr() *error1.Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetMatchReply) GetMatch() *Match {
	if x != nil {
		return x.Match
	}
	return nil
}

type JoinMatchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId uint64  `protobuf:"varint,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Positions []int64 `protobuf:"varint,2,rep,packed,name=positions,proto3" json:"positions,omitempty"`
	LineupId  uint64  `protobuf:"varint,3,opt,name=lineup_id,json=lineupId,proto3" json:"lineup_id,omitempty"`
	MatchId   uint64  `protobuf:"varint,4,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
}

func (x *JoinMatchReq) Reset() {
	*x = JoinMatchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinMatchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinMatchReq) ProtoMessage() {}

func (x *JoinMatchReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinMatchReq.ProtoReflect.Descriptor instead.
func (*JoinMatchReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{19}
}

func (x *JoinMatchReq) GetAccountId() uint64 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *JoinMatchReq) GetPositions() []int64 {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *JoinMatchReq) GetLineupId() uint64 {
	if x != nil {
		return x.LineupId
	}
	return 0
}

func (x *JoinMatchReq) GetMatchId() uint64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

type JoinMatchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err   *error1.Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Match *Match        `protobuf:"bytes,2,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *JoinMatchReply) Reset() {
	*x = JoinMatchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinMatchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinMatchReply) ProtoMessage() {}

func (x *JoinMatchReply) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinMatchReply.ProtoReflect.Descriptor instead.
func (*JoinMatchReply) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{20}
}

func (x *JoinMatchReply) GetErr() *error1.Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *JoinMatchReply) GetMatch() *Match {
	if x != nil {
		return x.Match
	}
	return nil
}

type SyncOperateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchId  uint64 `protobuf:"varint,1,opt,name=match_id,json=matchId,proto3" json:"match_id,omitempty"`
	Operator int32  `protobuf:"varint,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Event    string `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	From     int64  `protobuf:"varint,4,opt,name=from,proto3" json:"from,omitempty"`
	To       int64  `protobuf:"varint,5,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *SyncOperateReq) Reset() {
	*x = SyncOperateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncOperateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperateReq) ProtoMessage() {}

func (x *SyncOperateReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperateReq.ProtoReflect.Descriptor instead.
func (*SyncOperateReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{21}
}

func (x *SyncOperateReq) GetMatchId() uint64 {
	if x != nil {
		return x.MatchId
	}
	return 0
}

func (x *SyncOperateReq) GetOperator() int32 {
	if x != nil {
		return x.Operator
	}
	return 0
}

func (x *SyncOperateReq) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

func (x *SyncOperateReq) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *SyncOperateReq) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type SyncOperateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err   *error1.Error `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Match *Match        `protobuf:"bytes,2,opt,name=match,proto3" json:"match,omitempty"`
}

func (x *SyncOperateReply) Reset() {
	*x = SyncOperateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncOperateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncOperateReply) ProtoMessage() {}

func (x *SyncOperateReply) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncOperateReply.ProtoReflect.Descriptor instead.
func (*SyncOperateReply) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{22}
}

func (x *SyncOperateReply) GetErr() *error1.Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *SyncOperateReply) GetMatch() *Match {
	if x != nil {
		return x.Match
	}
	return nil
}

type KeepAliveReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator uint64 `protobuf:"varint,1,opt,name=operator,proto3" json:"operator,omitempty"`
}

func (x *KeepAliveReq) Reset() {
	*x = KeepAliveReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeepAliveReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveReq) ProtoMessage() {}

func (x *KeepAliveReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveReq.ProtoReflect.Descriptor instead.
func (*KeepAliveReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{23}
}

func (x *KeepAliveReq) GetOperator() uint64 {
	if x != nil {
		return x.Operator
	}
	return 0
}

type LogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operator uint64 `protobuf:"varint,1,opt,name=operator,proto3" json:"operator,omitempty"`
	Reason   string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_signaling_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_signaling_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_signaling_proto_rawDescGZIP(), []int{24}
}

func (x *LogoutReq) GetOperator() uint64 {
	if x != nil {
		return x.Operator
	}
	return 0
}

func (x *LogoutReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_signaling_proto protoreflect.FileDescriptor

var file_signaling_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x1a,
	0x18, 0x6c, 0x69, 0x62, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0b, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x69, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x22, 0xa0, 0x01, 0x0a, 0x06, 0x4c, 0x69, 0x6e, 0x65, 0x75,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x05, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x73, 0x22, 0xe7, 0x03, 0x0a, 0x05, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x28, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x55,
	0x6e, 0x69, 0x74, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x73, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x75, 0x6e,
	0x69, 0x74, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x68,
	0x61, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x09, 0x68, 0x61, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x69, 0x65,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x5f,
	0x65, 0x78, 0x70, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x4c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x45, 0x78, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x72,
	0x65, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x74, 0x79, 0x5f, 0x68, 0x75, 0x72, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x45, 0x78,
	0x70, 0x74, 0x79, 0x48, 0x75, 0x72, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x72, 0x61, 0x77, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x64, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x76, 0x65,
	0x55, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x22, 0xc2, 0x03, 0x0a, 0x0d, 0x42, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x06,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x61, 0x66, 0x66, 0x69, 0x6c, 0x69, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x1d, 0x0a,
	0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x61, 0x78, 0x5f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6d, 0x61, 0x78, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x61, 0x78, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d,
	0x61, 0x78, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e,
	0x6f, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x61,
	0x73, 0x65, 0x4e, 0x6f, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x6e, 0x6f, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x20,
	0x0a, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x5f, 0x63, 0x75, 0x72, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x43, 0x75, 0x72, 0x65,
	0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x6f, 0x5f, 0x65, 0x71, 0x75, 0x69,
	0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x73,
	0x65, 0x5f, 0x63, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x55, 0x73, 0x65, 0x43, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x05, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x43, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x22, 0x3d, 0x0a, 0x0d, 0x54, 0x65, 0x6d, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f,
	0x64, 0x22, 0xbd, 0x04, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x41, 0x0a, 0x0d, 0x62, 0x61,
	0x73, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x0d,
	0x62, 0x61, 0x73, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73,
	0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x5f, 0x70, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a,
	0x0c, 0x68, 0x75, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x65, 0x61, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x68, 0x75, 0x72, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x65, 0x61, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x6f, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x5f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6e, 0x6f,
	0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x63, 0x75, 0x72,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x43, 0x75, 0x72, 0x65, 0x12,
	0x40, 0x0a, 0x0d, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x6b, 0x12, 0x3c, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x6f, 0x76, 0x65,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x12,
	0x2f, 0x0a, 0x04, 0x68, 0x75, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x6d,
	0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x68, 0x75, 0x72, 0x74,
	0x12, 0x2f, 0x0a, 0x04, 0x63, 0x75, 0x72, 0x65, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x54, 0x65,
	0x6d, 0x70, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x52, 0x04, 0x63, 0x75, 0x72,
	0x65, 0x22, 0xa8, 0x01, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x77, 0x69, 0x6e,
	0x6e, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x68, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x75, 0x72,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x77, 0x68, 0x6f, 0x73, 0x65, 0x54, 0x75,
	0x72, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x75, 0x72, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12,
	0x2b, 0x0a, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x52, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x73, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x73, 0x6e, 0x22, 0x44, 0x0a, 0x08,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x49, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x1c, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x6c, 0x69, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x3c, 0x0a,
	0x0c, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a,
	0x06, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e,
	0x65, 0x75, 0x70, 0x52, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x22, 0x2e, 0x0a, 0x0d, 0x46,
	0x69, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x75, 0x0a, 0x0f, 0x46,
	0x69, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x69,
	0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x07, 0x6c, 0x69, 0x6e, 0x65, 0x75,
	0x70, 0x73, 0x22, 0x3f, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x06, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x06, 0x6c, 0x69, 0x6e,
	0x65, 0x75, 0x70, 0x22, 0x40, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e,
	0x65, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x49, 0x64, 0x22, 0x48,
	0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x1c, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c,
	0x69, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0x2c, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x69, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x22, 0x83, 0x01, 0x0a, 0x0c, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x22, 0x59, 0x0a, 0x0e, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x69, 0x62, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x22, 0x81, 0x01, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x5b, 0x0a, 0x10, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1c, 0x0a, 0x03, 0x65, 0x72, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6c, 0x69, 0x62, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x22, 0x2a, 0x0a, 0x0c, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x22, 0x3f,
	0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x32,
	0x87, 0x06, 0x0a, 0x09, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x39, 0x0a,
	0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x4c,
	0x69, 0x6e, 0x65, 0x75, 0x70, 0x12, 0x1a, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x0a,
	0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x12, 0x1b, 0x2e, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69,
	0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4c, 0x69, 0x6e, 0x65, 0x75,
	0x70, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x12, 0x1d, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x48, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70,
	0x12, 0x1d, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x08, 0x4e, 0x65,
	0x77, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62,
	0x2e, 0x4e, 0x65, 0x77, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12, 0x19, 0x2e, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x45, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x12,
	0x1a, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x4a,
	0x6f, 0x69, 0x6e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4b, 0x0a, 0x0b, 0x53, 0x79, 0x6e,
	0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x42, 0x0a, 0x09, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c,
	0x69, 0x76, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x62, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x19, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3d, 0x0a, 0x07, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e,
	0x67, 0x5f, 0x70, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x62, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x2a, 0x5a, 0x28, 0x73, 0x64, 0x6d,
	0x68, 0x74, 0x2f, 0x73, 0x64, 0x6d, 0x68, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x69, 0x6e, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_signaling_proto_rawDescOnce sync.Once
	file_signaling_proto_rawDescData = file_signaling_proto_rawDesc
)

func file_signaling_proto_rawDescGZIP() []byte {
	file_signaling_proto_rawDescOnce.Do(func() {
		file_signaling_proto_rawDescData = protoimpl.X.CompressGZIP(file_signaling_proto_rawDescData)
	})
	return file_signaling_proto_rawDescData
}

var file_signaling_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_signaling_proto_goTypes = []interface{}{
	(*CommonReply)(nil),      // 0: signaling_pb.CommonReply
	(*Lineup)(nil),           // 1: signaling_pb.Lineup
	(*Scene)(nil),            // 2: signaling_pb.Scene
	(*BaseAttribute)(nil),    // 3: signaling_pb.BaseAttribute
	(*Skill)(nil),            // 4: signaling_pb.Skill
	(*TempAttribute)(nil),    // 5: signaling_pb.TempAttribute
	(*Unit)(nil),             // 6: signaling_pb.Unit
	(*Match)(nil),            // 7: signaling_pb.match
	(*LoginReq)(nil),         // 8: signaling_pb.LoginReq
	(*LoginReply)(nil),       // 9: signaling_pb.LoginReply
	(*NewLineupReq)(nil),     // 10: signaling_pb.NewLineupReq
	(*FindLineupReq)(nil),    // 11: signaling_pb.FindLineupReq
	(*FindLineupReply)(nil),  // 12: signaling_pb.FindLineupReply
	(*UpdateLineupReq)(nil),  // 13: signaling_pb.UpdateLineupReq
	(*DeleteLineupReq)(nil),  // 14: signaling_pb.DeleteLineupReq
	(*NewMatchReq)(nil),      // 15: signaling_pb.NewMatchReq
	(*NewMatchReply)(nil),    // 16: signaling_pb.NewMatchReply
	(*GetMatchReq)(nil),      // 17: signaling_pb.GetMatchReq
	(*GetMatchReply)(nil),    // 18: signaling_pb.GetMatchReply
	(*JoinMatchReq)(nil),     // 19: signaling_pb.JoinMatchReq
	(*JoinMatchReply)(nil),   // 20: signaling_pb.JoinMatchReply
	(*SyncOperateReq)(nil),   // 21: signaling_pb.SyncOperateReq
	(*SyncOperateReply)(nil), // 22: signaling_pb.SyncOperateReply
	(*KeepAliveReq)(nil),     // 23: signaling_pb.KeepAliveReq
	(*LogoutReq)(nil),        // 24: signaling_pb.LogoutReq
	(*error1.Error)(nil),     // 25: lib.Error
}
var file_signaling_proto_depIdxs = []int32{
	25, // 0: signaling_pb.CommonReply.err:type_name -> lib.Error
	6,  // 1: signaling_pb.Scene.units:type_name -> signaling_pb.Unit
	4,  // 2: signaling_pb.BaseAttribute.skills:type_name -> signaling_pb.Skill
	3,  // 3: signaling_pb.Unit.baseAttribute:type_name -> signaling_pb.BaseAttribute
	5,  // 4: signaling_pb.Unit.change_attack:type_name -> signaling_pb.TempAttribute
	5,  // 5: signaling_pb.Unit.change_move:type_name -> signaling_pb.TempAttribute
	5,  // 6: signaling_pb.Unit.hurt:type_name -> signaling_pb.TempAttribute
	5,  // 7: signaling_pb.Unit.cure:type_name -> signaling_pb.TempAttribute
	2,  // 8: signaling_pb.match.scenes:type_name -> signaling_pb.Scene
	25, // 9: signaling_pb.LoginReply.err:type_name -> lib.Error
	1,  // 10: signaling_pb.NewLineupReq.lineup:type_name -> signaling_pb.Lineup
	25, // 11: signaling_pb.FindLineupReply.err:type_name -> lib.Error
	1,  // 12: signaling_pb.FindLineupReply.lineups:type_name -> signaling_pb.Lineup
	1,  // 13: signaling_pb.UpdateLineupReq.lineup:type_name -> signaling_pb.Lineup
	25, // 14: signaling_pb.NewMatchReply.err:type_name -> lib.Error
	25, // 15: signaling_pb.GetMatchReply.err:type_name -> lib.Error
	7,  // 16: signaling_pb.GetMatchReply.match:type_name -> signaling_pb.match
	25, // 17: signaling_pb.JoinMatchReply.err:type_name -> lib.Error
	7,  // 18: signaling_pb.JoinMatchReply.match:type_name -> signaling_pb.match
	25, // 19: signaling_pb.SyncOperateReply.err:type_name -> lib.Error
	7,  // 20: signaling_pb.SyncOperateReply.match:type_name -> signaling_pb.match
	8,  // 21: signaling_pb.Signaling.Login:input_type -> signaling_pb.LoginReq
	10, // 22: signaling_pb.Signaling.NewLineup:input_type -> signaling_pb.NewLineupReq
	11, // 23: signaling_pb.Signaling.FindLineup:input_type -> signaling_pb.FindLineupReq
	13, // 24: signaling_pb.Signaling.UpdateLineup:input_type -> signaling_pb.UpdateLineupReq
	14, // 25: signaling_pb.Signaling.DeleteLineup:input_type -> signaling_pb.DeleteLineupReq
	15, // 26: signaling_pb.Signaling.NewMatch:input_type -> signaling_pb.NewMatchReq
	17, // 27: signaling_pb.Signaling.GetMatch:input_type -> signaling_pb.GetMatchReq
	19, // 28: signaling_pb.Signaling.JoinMatch:input_type -> signaling_pb.JoinMatchReq
	21, // 29: signaling_pb.Signaling.SyncOperate:input_type -> signaling_pb.SyncOperateReq
	23, // 30: signaling_pb.Signaling.KeepAlive:input_type -> signaling_pb.KeepAliveReq
	24, // 31: signaling_pb.Signaling.Offline:input_type -> signaling_pb.LogoutReq
	9,  // 32: signaling_pb.Signaling.Login:output_type -> signaling_pb.LoginReply
	0,  // 33: signaling_pb.Signaling.NewLineup:output_type -> signaling_pb.CommonReply
	12, // 34: signaling_pb.Signaling.FindLineup:output_type -> signaling_pb.FindLineupReply
	0,  // 35: signaling_pb.Signaling.UpdateLineup:output_type -> signaling_pb.CommonReply
	0,  // 36: signaling_pb.Signaling.DeleteLineup:output_type -> signaling_pb.CommonReply
	16, // 37: signaling_pb.Signaling.NewMatch:output_type -> signaling_pb.NewMatchReply
	18, // 38: signaling_pb.Signaling.GetMatch:output_type -> signaling_pb.GetMatchReply
	20, // 39: signaling_pb.Signaling.JoinMatch:output_type -> signaling_pb.JoinMatchReply
	22, // 40: signaling_pb.Signaling.SyncOperate:output_type -> signaling_pb.SyncOperateReply
	0,  // 41: signaling_pb.Signaling.KeepAlive:output_type -> signaling_pb.CommonReply
	0,  // 42: signaling_pb.Signaling.Offline:output_type -> signaling_pb.CommonReply
	32, // [32:43] is the sub-list for method output_type
	21, // [21:32] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_signaling_proto_init() }
func file_signaling_proto_init() {
	if File_signaling_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_signaling_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lineup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Skill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TempAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Match); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewLineupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindLineupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindLineupReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLineupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteLineupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewMatchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinMatchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinMatchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncOperateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncOperateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeepAliveReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_signaling_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogoutReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_signaling_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_signaling_proto_goTypes,
		DependencyIndexes: file_signaling_proto_depIdxs,
		MessageInfos:      file_signaling_proto_msgTypes,
	}.Build()
	File_signaling_proto = out.File
	file_signaling_proto_rawDesc = nil
	file_signaling_proto_goTypes = nil
	file_signaling_proto_depIdxs = nil
}
